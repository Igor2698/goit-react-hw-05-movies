{"version":3,"file":"static/js/954.49f724ef.chunk.js","mappings":"+SAGMA,EAAS,mCAKfC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAAG,6GAEKD,EAAAA,EAAAA,IAAU,mBAAoB,CACjDE,OAAQ,CACJC,QAASJ,EACTK,SAAU,WALA,cAEZC,EAFY,yBAQXA,EAASC,MARE,sCAUlBC,QAAQC,MAAM,mKAAd,MAVkB,8DAAH,qDAgBVC,EAAa,mCAAG,WAAMC,GAAN,gGAIEV,EAAAA,EAAAA,IAAA,gBAAmBU,GAAW,CACjDR,OAAQ,CACJC,QAASJ,KANI,cAIfM,EAJe,yBAUdA,EAASC,MAVK,sCAYrBC,QAAQC,MAAM,mKAAd,MAZqB,8DAAH,sDAoBbG,EAAO,mCAAG,WAAMC,GAAN,gGAIQZ,EAAAA,EAAAA,IAAA,gBAAmBY,EAAnB,YAAuC,CAC1DV,OAAQ,CACJC,QAASJ,EACTc,KAAM,KAPC,cAITR,EAJS,yBAWRA,EAASC,MAXD,sCAafC,QAAQC,MAAM,mKAAd,MAbe,8DAAH,sDAmBPM,EAAU,mCAAG,WAAMF,GAAN,gGAIKZ,EAAAA,EAAAA,IAAA,gBAAmBY,EAAnB,YAAuC,CAC1DV,OAAQ,CACJC,QAASJ,KANC,cAIZM,EAJY,yBAUXA,EAASC,MAVE,sCAYlBC,QAAQC,MAAM,mKAAd,MAZkB,8DAAH,sDAmBVO,EAAe,mCAAG,WAAMC,GAAN,gGAIAhB,EAAAA,EAAAA,IAAA,6BAAgCgB,GAAc,CACjEd,OAAQ,CACJC,QAASJ,KANM,cAIjBM,EAJiB,yBAUhBA,EAASC,MAVO,sCAYvBC,QAAQC,MAAM,mKAAd,MAZuB,8DAAH,qD,sICnF5B,EAAyB,uBAAzB,EAA0D,wBAA1D,EAA+F,2BAA/F,EAAyI,6B,2BCiDzI,EA1CgB,WACd,OAA8BS,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOT,EAAP,KAAcY,EAAd,KACA,GAA8BH,EAAAA,EAAAA,UAAS,IAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAiBR,OAhBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIN,GAAW,GAFf,UAG2BL,EAAAA,EAAAA,IAAWS,GAHtC,OAGUlB,EAHV,OAIIiB,EAAWjB,EAASqB,SACpBP,GAAW,GALf,gDAOIC,EAAS,EAAD,IACRb,QAAQoB,IAAR,MARJ,0DADc,uBAAC,WAAD,wBAadC,EACD,GAAE,CAACL,KAGF,gCACGf,IAAS,SAACqB,EAAA,EAAD,CAAeC,QAAStB,EAAMsB,UACvCZ,IAAW,SAAC,IAAD,IAEXG,EAAQU,OAAS,EAChBV,EAAQW,KAAI,SAAAC,GAAM,OAChB,yBACE,gBAAIC,UAAWC,EAAf,WACE,eAAGD,UAAWC,EAAd,UAA0B,WAASF,EAAOG,WAC1C,cAAGF,UAAWC,EAAd,SAA4BF,EAAOI,cAH9BJ,EAAOV,GADA,KASlB,cAAGW,UAAWC,EAAd,SAAgC,+BAIvC,C,mEChDc,SAASN,EAAT,GAAqC,IAAZC,EAAW,EAAXA,QACtC,OACE,gBAAKQ,KAAK,QAAV,UACE,uBAAIR,KAGT,C","sources":["api.js","webpack://goit-react-hw-05-movies/./src/components/Reviews/Review.module.css?8c12","components/Reviews/Review.jsx","components/TextErrorView.jsx"],"sourcesContent":["import axios from 'axios';\n\n// 2b5ddb7b349a0a14050a55daa13e1ea4\nconst apiKey = '2b5ddb7b349a0a14050a55daa13e1ea4';\n\n\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMoovies = async () => {\n    try {\n        const response = await axios.get('trending/all/day', {\n            params: {\n                api_key: apiKey,\n                language: 'en-US',\n            },\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Ошибка при выполнении запроса:', error);\n        throw error;\n    }\n};\n\n\nexport const getMoovieByID = async mooveId => {\n\n\n    try {\n        const response = await axios.get(`movie/${mooveId}`, {\n            params: {\n                api_key: apiKey,\n\n            },\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Ошибка при выполнении запроса:', error);\n        throw error;\n    }\n}\n\n\n\n\nexport const getCast = async moovieId => {\n\n\n    try {\n        const response = await axios.get(`movie/${moovieId}/credits`, {\n            params: {\n                api_key: apiKey,\n                page: 1,\n\n            },\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Ошибка при выполнении запроса:', error);\n        throw error;\n    }\n}\n\n\nexport const getReviews = async moovieId => {\n\n\n    try {\n        const response = await axios.get(`movie/${moovieId}/reviews`, {\n            params: {\n                api_key: apiKey,\n\n            },\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Ошибка при выполнении запроса:', error);\n        throw error;\n    }\n}\n\n\n\nexport const getMoovieByName = async moovieName => {\n\n\n    try {\n        const response = await axios.get(`search/movie?query=${moovieName}`, {\n            params: {\n                api_key: apiKey,\n\n            },\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Ошибка при выполнении запроса:', error);\n        throw error;\n    }\n}\n\n\n\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"author\":\"Review_author__fZw4a\",\"content\":\"Review_content__VBfBT\",\"reviewItem\":\"Review_reviewItem__hMkX2\",\"errorReviews\":\"Review_errorReviews__DmXRx\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'api';\nimport css from './Review.module.css';\nimport { ImagePendingView } from 'components/Loader';\n\nimport TextErrorView from 'components/TextErrorView';\n\nconst Reviews = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    async function getInfo() {\n      try {\n        setLoading(true);\n        const response = await getReviews(id);\n        setReviews(response.results);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        console.log(error);\n      }\n    }\n\n    getInfo();\n  }, [id]);\n\n  return (\n    <>\n      {error && <TextErrorView message={error.message} />}\n      {loading && <ImagePendingView />}\n\n      {reviews.length > 0 ? (\n        reviews.map(review => (\n          <ul key={review.id}>\n            <li className={css.reviewItem}>\n              <p className={css.author}>Author: {review.author}</p>\n              <p className={css.content}>{review.content}</p>\n            </li>\n          </ul>\n        ))\n      ) : (\n        <p className={css.errorReviews}>Did not find any reviews</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","export default function TextErrorView({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>{message}</p>\n    </div>\n  );\n}\n"],"names":["apiKey","axios","getMoovies","params","api_key","language","response","data","console","error","getMoovieByID","mooveId","getCast","moovieId","page","getReviews","getMoovieByName","moovieName","useState","loading","setLoading","setError","reviews","setReviews","id","useParams","useEffect","results","log","getInfo","TextErrorView","message","length","map","review","className","css","author","content","role"],"sourceRoot":""}