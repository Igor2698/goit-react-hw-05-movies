{"version":3,"file":"static/js/597.1024b29c.chunk.js","mappings":"+SAGMA,EAAS,mCAKfC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAAG,6GAEKD,EAAAA,EAAAA,IAAU,mBAAoB,CACjDE,OAAQ,CACJC,QAASJ,EACTK,SAAU,WALA,cAEZC,EAFY,yBAQXA,EAASC,MARE,sCAUlBC,QAAQC,MAAM,mKAAd,MAVkB,8DAAH,qDAgBVC,EAAa,mCAAG,WAAMC,GAAN,gGAIEV,EAAAA,EAAAA,IAAA,gBAAmBU,GAAW,CACjDR,OAAQ,CACJC,QAASJ,KANI,cAIfM,EAJe,yBAUdA,EAASC,MAVK,sCAYrBC,QAAQC,MAAM,mKAAd,MAZqB,8DAAH,sDAoBbG,EAAO,mCAAG,WAAMC,GAAN,gGAIQZ,EAAAA,EAAAA,IAAA,gBAAmBY,EAAnB,YAAuC,CAC1DV,OAAQ,CACJC,QAASJ,EACTc,KAAM,KAPC,cAITR,EAJS,yBAWRA,EAASC,MAXD,sCAafC,QAAQC,MAAM,mKAAd,MAbe,8DAAH,sDAmBPM,EAAU,mCAAG,WAAMF,GAAN,gGAIKZ,EAAAA,EAAAA,IAAA,gBAAmBY,EAAnB,YAAuC,CAC1DV,OAAQ,CACJC,QAASJ,KANC,cAIZM,EAJY,yBAUXA,EAASC,MAVE,sCAYlBC,QAAQC,MAAM,mKAAd,MAZkB,8DAAH,sDAmBVO,EAAe,mCAAG,WAAMC,GAAN,gGAIAhB,EAAAA,EAAAA,IAAA,6BAAgCgB,GAAc,CACjEd,OAAQ,CACJC,QAASJ,KANM,cAIjBM,EAJiB,yBAUhBA,EAASC,MAVO,sCAYvBC,QAAQC,MAAM,mKAAd,MAZuB,8DAAH,qD,2HCpB5B,UAtDa,WACX,OAA8BS,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOT,EAAP,KAAcY,EAAd,KACA,GAA4BH,EAAAA,EAAAA,UAAS,MAArC,eAAOI,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIN,GAAW,GAFf,UAG2BR,EAAAA,EAAAA,IAAQY,GAHnC,OAGUlB,EAHV,OAIIc,GAAW,GAEXG,EAAUjB,EAASqB,MANvB,gDAQIN,EAAS,EAAD,IACRb,QAAQoB,IAAR,MATJ,0DADc,uBAAC,WAAD,wBAcdC,EACD,GAAE,CAACL,KAGF,gCACGf,IAAS,SAAC,IAAD,CAAeqB,QAASrB,EAAMqB,UACvCX,IAAW,SAAC,IAAD,IAEXG,IACC,wBACGA,EAAOS,MAAM,EAAG,IAAIC,KAAI,SAAAC,GACvB,OACE,2BACE,yBAAG,cAAYA,EAAMC,cACrB,yBAAG,SAAOD,EAAME,SAChB,gBACEC,MAAM,MACNC,OAAO,MACPC,IACEL,EAAMM,aAAN,0CACuCN,EAAMM,cA1C/D,8EA6CgBC,IAAI,YAXCP,EAAMT,GAelB,QAKV,C,4EC5DYiB,EAAmB,WAC9B,OACE,SAAC,KAAD,CACEC,SAAS,EACTL,OAAO,KACPD,MAAM,KACNO,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAG1D,C,mECdc,SAASC,EAAT,GAAqC,IAAZjB,EAAW,EAAXA,QACtC,OACE,gBAAKkB,KAAK,QAAV,UACE,uBAAIlB,KAGT,C","sources":["api.js","components/Cast.jsx","components/Loader.jsx","components/TextErrorView.jsx"],"sourcesContent":["import axios from 'axios';\n\n// 2b5ddb7b349a0a14050a55daa13e1ea4\nconst apiKey = '2b5ddb7b349a0a14050a55daa13e1ea4';\n\n\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getMoovies = async () => {\n    try {\n        const response = await axios.get('trending/all/day', {\n            params: {\n                api_key: apiKey,\n                language: 'en-US',\n            },\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Ошибка при выполнении запроса:', error);\n        throw error;\n    }\n};\n\n\nexport const getMoovieByID = async mooveId => {\n\n\n    try {\n        const response = await axios.get(`movie/${mooveId}`, {\n            params: {\n                api_key: apiKey,\n\n            },\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Ошибка при выполнении запроса:', error);\n        throw error;\n    }\n}\n\n\n\n\nexport const getCast = async moovieId => {\n\n\n    try {\n        const response = await axios.get(`movie/${moovieId}/credits`, {\n            params: {\n                api_key: apiKey,\n                page: 1,\n\n            },\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Ошибка при выполнении запроса:', error);\n        throw error;\n    }\n}\n\n\nexport const getReviews = async moovieId => {\n\n\n    try {\n        const response = await axios.get(`movie/${moovieId}/reviews`, {\n            params: {\n                api_key: apiKey,\n\n            },\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Ошибка при выполнении запроса:', error);\n        throw error;\n    }\n}\n\n\n\nexport const getMoovieByName = async moovieName => {\n\n\n    try {\n        const response = await axios.get(`search/movie?query=${moovieName}`, {\n            params: {\n                api_key: apiKey,\n\n            },\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Ошибка при выполнении запроса:', error);\n        throw error;\n    }\n}\n\n\n\n\n\n\n\n\n\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getCast } from 'api';\nimport { ImagePendingView } from 'components/Loader';\n\nimport TextErrorView from 'components/TextErrorView';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst Cast = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [actors, setActors] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getCasts() {\n      try {\n        setLoading(true);\n        const response = await getCast(id);\n        setLoading(false);\n\n        setActors(response.cast);\n      } catch (error) {\n        setError(error);\n        console.log(error);\n      }\n    }\n\n    getCasts();\n  }, [id]);\n\n  return (\n    <>\n      {error && <TextErrorView message={error.message} />}\n      {loading && <ImagePendingView />}\n\n      {actors && (\n        <ul>\n          {actors.slice(0, 30).map(actor => {\n            return (\n              <li key={actor.id}>\n                <p>Character: {actor.character}</p>\n                <p>Name: {actor.name}</p>\n                <img\n                  width=\"100\"\n                  height=\"150\"\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                      : defaultImg\n                  }\n                  alt=\"actor\"\n                />\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import { ColorRing } from 'react-loader-spinner';\n\nexport const ImagePendingView = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  );\n};\n","export default function TextErrorView({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>{message}</p>\n    </div>\n  );\n}\n"],"names":["apiKey","axios","getMoovies","params","api_key","language","response","data","console","error","getMoovieByID","mooveId","getCast","moovieId","page","getReviews","getMoovieByName","moovieName","useState","loading","setLoading","setError","actors","setActors","id","useParams","useEffect","cast","log","getCasts","message","slice","map","actor","character","name","width","height","src","profile_path","alt","ImagePendingView","visible","ariaLabel","wrapperStyle","wrapperClass","colors","TextErrorView","role"],"sourceRoot":""}